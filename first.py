# -*- coding: utf-8 -*-
"""
Created on Fri Mar  1 08:59:59 2024

@author: MDT
"""

from flask import Flask, request, jsonify, render_template
import pickle
import numpy as np

app = Flask(__name__)

# Load the model
with open('model.pkl', 'rb') as file:
    model = pickle.load(file)

@app.route('/')
def home():
    return render_template('sample1.html')

@app.route('/predict', methods=['POST'])
def predict():
    years_of_experience = float(request.form['years_of_experience'])
    prediction = model.predict(np.array([[years_of_experience]]))
    return render_template('result.html', prediction=prediction[0])

if __name__ == '__main__':
    app.run()

    
    
    
    
# # -*- coding: utf-8 -*-
# """POLY  regresssion KJS.ipynb

# Automatically generated by Colaboratory.

# Original file is located at
#     https://colab.research.google.com/drive/19r96EfLFmIAPya7ZTNaYJ6-qSDvRBST4
# """

# # importing the libraries

# import numpy as np
# import matplotlib.pyplot as plt
# import pandas as pd

# #import the dataset
# dataset = pd.read_csv('dataset5.csv')
# # https://drive.google.com/file/d/1wjq1Un5qPT_ftNm3xJ2CdfpygLkayzzw/view?usp=sharing

# X = dataset.iloc[:, 1:2].values
# Y = dataset.iloc[:, -1].values

# X

# Y

# # fitting linear regression to the dataset
# from sklearn.linear_model import LinearRegression
# lin_reg = LinearRegression()
# lin_reg.fit(X, Y)

# # Visualising the Linear Regression results
# plt.scatter(X, Y, color = 'red')
# plt.plot(X, lin_reg.predict(X), color = 'blue')
# plt.title('Truth or Bluffn(Linear Regression')
# plt.xlabel('Position Label')
# plt.ylabel('Salary')
# plt.show()

# # fitting polynomial regression to the dataset
# from sklearn.preprocessing import PolynomialFeatures
# poly_reg = PolynomialFeatures(degree = 10)
# X_poly = poly_reg.fit_transform(X)
# lin_reg_2 = LinearRegression()
# lin_reg_2.fit(X_poly, Y)

# plt.scatter(X, Y, color = 'red')
# plt.plot(X, lin_reg_2.predict(poly_reg.fit_transform(X)), color = 'blue')
# plt.title('Truth or Bluffn(Polynomial Regression')
# plt.xlabel('Position Label')
# plt.ylabel('Salary')
# plt.show()

# X

# X_poly

# np.round(X_poly,0) *10

# # Predicting a new result with Linear Regression
# lin_reg.predict([[11]])

# # Predicting a new result with Polynomial Regression
# lin_reg_2.predict(poly_reg.fit_transform([[6.5]]))

# from sklearn.metrics import classification_report
# # print(classification_report(Y_test,Y_pred))
# print(classification_report(Y,Y))

# import pickle

# # Save the model to a file
# with open('model.pkl', 'wb') as file:
#     pickle.dump(lin_reg, file)
# # need to check sidebar

# # Load the model from a file
# with open('model.pkl', 'rb') as file:
#     loaded_model = pickle.load(file)

# # Now you can use loaded_model to make predictions
# # For example:
# prediction = loaded_model.predict(poly_reg.fit_transform([[6.5]]))
# print(prediction)